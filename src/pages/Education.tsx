import { useState } from 'react';
import { Input } from '@/components/ui/input';
import { Search } from 'lucide-react';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import EducationCard from '@/components/EducationCard';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';

const Education = () => {
  const [searchQuery, setSearchQuery] = useState('');

  const educationItems = [
    {
      icon: 'üìö',
      title: '–í–∏–¥–µ–æ–∫—É—Ä—Å: –ì–µ–Ω–µ–∞–ª–æ–≥–∏—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
      description: '–ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ä–æ–¥–æ—Å–ª–æ–≤–Ω—ã—Ö –¥—Ä–µ–≤ –∏ —Ä–∞–±–æ—Ç—ã —Å –∞—Ä—Ö–∏–≤–Ω—ã–º–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏',
      duration: '5 —É—Ä–æ–∫–æ–≤, 2 —á–∞—Å–∞',
      badge: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
      category: 'course'
    },
    {
      icon: 'üîç',
      title: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∞—Ä—Ö–∏–≤–∞–º–∏: –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è',
      description: '–ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ø–æ–∏—Å–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∞—Ä—Ö–∏–≤–∞—Ö',
      duration: '25 –º–∏–Ω—É—Ç —á—Ç–µ–Ω–∏—è',
      category: 'guide'
    },
    {
      icon: 'üéôÔ∏è',
      title: '–®–∞–±–ª–æ–Ω—ã –∏–Ω—Ç–µ—Ä–≤—å—é –¥–ª—è —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤',
      description: '–ì–æ—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤—å—é —Å —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞–º–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ–º–µ–π–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏–π',
      duration: '10 —à–∞–±–ª–æ–Ω–æ–≤',
      category: 'template'
    },
    {
      icon: 'üß¨',
      title: '–î–ù–ö-–≥–µ–Ω–µ–∞–ª–æ–≥–∏—è: –æ—Å–Ω–æ–≤—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏',
      description: '–ö–∞–∫ –î–ù–ö-—Ç–µ—Å—Ç—ã –º–æ–≥—É—Ç –ø–æ–º–æ—á—å –≤ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ —Ä–æ–¥–æ—Å–ª–æ–≤–Ω–æ–π –∏ –ø–æ–∏—Å–∫–µ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤',
      duration: '4 —É—Ä–æ–∫–∞, 1.5 —á–∞—Å–∞',
      badge: '–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ',
      category: 'course'
    },
    {
      icon: 'üìÑ',
      title: '–¢–∏–ø—ã –≥–µ–Ω–µ–∞–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
      description: '–û–±–∑–æ—Ä –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ —Ä–æ–¥–æ—Å–ª–æ–≤–Ω–æ–π',
      duration: '15 –º–∏–Ω—É—Ç —á—Ç–µ–Ω–∏—è',
      category: 'guide'
    },
    {
      icon: 'üèõÔ∏è',
      title: '–ú–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –∫–Ω–∏–≥–∏: –∫–∞–∫ —á–∏—Ç–∞—Ç—å –∏ –ø–æ–Ω–∏–º–∞—Ç—å',
      description: '–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–∞–±–æ—Ç–µ —Å —Ü–µ—Ä–∫–æ–≤–Ω—ã–º–∏ –º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–º–∏ –∫–Ω–∏–≥–∞–º–∏ XIX - –Ω–∞—á–∞–ª–∞ XX –≤–µ–∫–æ–≤',
      duration: '3 —É—Ä–æ–∫–∞, 1 —á–∞—Å',
      category: 'course'
    },
  ];

  const filteredItems = educationItems.filter(item => 
    item.title.toLowerCase().includes(searchQuery.toLowerCase()) || 
    item.description.toLowerCase().includes(searchQuery.toLowerCase())
  );

  return (
    <div className="min-h-screen flex flex-col">
      <Header />
      <main className="flex-grow bg-muted/10">
        <div className="container mx-auto py-12">
          <div className="text-center mb-12">
            <h1 className="font-heading text-4xl font-bold mb-4">–û–±—É—á–µ–Ω–∏–µ</h1>
            <p className="text-lg max-w-2xl mx-auto text-muted-foreground">
              –ö—É—Ä—Å—ã, —Å—Ç–∞—Ç—å–∏ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Ä–æ–¥–æ—Å–ª–æ–≤–Ω–æ–π –∏ —Ä–∞–±–æ—Ç—ã —Å –∞—Ä—Ö–∏–≤–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏
            </p>
          </div>
          
          <div className="relative max-w-xl mx-auto mb-12">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground" size={18} />
            <Input
              type="search"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –∫—É—Ä—Å–∞–º –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º..."
              className="pl-10"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
            />
          </div>
          
          <Tabs defaultValue="all" className="mb-8">
            <TabsList>
              <TabsTrigger value="all">–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</TabsTrigger>
              <TabsTrigger value="course">–ö—É—Ä—Å—ã</TabsTrigger>
              <TabsTrigger value="guide">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</TabsTrigger>
              <TabsTrigger value="template">–®–∞–±–ª–æ–Ω—ã</TabsTrigger>
            </TabsList>
            
            <TabsContent value="all">
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredItems.map((item, index) => (
                  <EducationCard
                    key={index}
                    icon={item.icon}
                    title={item.title}
                    description={item.description}
                    duration={item.duration}
                    badge={item.badge}
                  />
                ))}
              </div>
            </TabsContent>
            
            <TabsContent value="course">
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredItems
                  .filter(item => item.category === 'course')
                  .map((item, index) => (
                    <EducationCard
                      key={index}
                      icon={item.icon}
                      title={item.title}
                      description={item.description}
                      duration={item.duration}
                      badge={item.badge}
                    />
                  ))}
              </div>
            </TabsContent>
            
            <TabsContent value="guide">
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredItems
                  .filter(item => item.category === 'guide')
                  .map((item, index) => (
                    <EducationCard
                      key={index}
                      icon={item.icon}
                      title={item.title}
                      description={item.description}
                      duration={item.duration}
                      badge={item.badge}
                    />
                  ))}
              </div>
            </TabsContent>
            
            <TabsContent value="template">
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredItems
                  .filter(item => item.category === 'template')
                  .map((item, index) => (
                    <EducationCard
                      key={index}
                      icon={item.icon}
                      title={item.title}
                      description={item.description}
                      duration={item.duration}
                      badge={item.badge}
                    />
                  ))}
              </div>
            </TabsContent>
          </Tabs>
          
          {filteredItems.length === 0 && (
            <div className="text-center py-12">
              <p className="text-muted-foreground">–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.</p>
            </div>
          )}
        </div>
      </main>
      <Footer />
    </div>
  );
};

export default Education;